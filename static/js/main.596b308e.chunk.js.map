{"version":3,"sources":["Header.js","Todo.js","TodoForm.js","TodoList.js","App.js","index.js"],"names":["Header","Todo","props","state","completed","handleClick","bind","this","setState","buttonText","completedStyle","className","title","description","onClick","handleDelete","React","Component","TodoForm","handleChange","handleSubmit","event","preventDefault","test","handleAdd","target","name","value","error","style","color","onSubmit","type","onChange","required","TodoList","todos","id","nextId","newTodos","filter","todo","newTodo","push","map","key","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.596b308e.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport default function Header() {\r\n  return (\r\n    <header>\r\n      <h1>YARTA: Yet Another Todo List</h1>\r\n    </header>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport \"./Todo.css\";\r\n\r\nexport default class Todo extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    // initial state of each Todo\r\n    this.state = {\r\n      completed: false,\r\n    };\r\n    this.handleClick = this.handleClick.bind(this);\r\n  }\r\n\r\n  // event handler to mark a Todo as completed or not\r\n  handleClick() {\r\n    this.setState({\r\n      completed: !this.state.completed,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const buttonText = this.state.completed ? \"not completed\" : \"completed\";\r\n    const completedStyle = this.state.completed ? \"completed\" : \"\";\r\n    return (\r\n      <div className={`todo ${completedStyle}`}>\r\n        <h3>{this.props.title}</h3>\r\n        <p>{this.props.description}</p>\r\n        <button onClick={this.handleClick}>Mark as {buttonText}</button>\r\n        <button onClick={this.props.handleDelete}>Delete</button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\n\r\nexport default class TodoForm extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    // initial state of inputs\r\n    this.state = {\r\n      title: \"\",\r\n      description: \"\",\r\n    };\r\n\r\n    // method binding\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  handleSubmit(event) {\r\n    event.preventDefault();\r\n    // form validation\r\n    if (\r\n      /[^A-Za-z0-9]+/gi.test(this.state.title) ||\r\n      /[^A-Za-z0-9]+/gi.test(this.state.description)\r\n    ) {\r\n      return;\r\n    }\r\n    // pass state (form data) to parent component\r\n    this.props.handleAdd(this.state);\r\n  }\r\n\r\n  // input state tracking\r\n  handleChange(event) {\r\n    this.setState({\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    // if input information is not valid, I want to render some error message.\r\n    let error = null;\r\n    if (\r\n      /[^A-Za-z0-9]+/gi.test(this.state.title) ||\r\n      /[^A-Za-z0-9]+/gi.test(this.state.description)\r\n    ) {\r\n      error = (\r\n        <p style={{ color: \"crimson\" }}>Only letters and numbers allowed!.</p>\r\n      );\r\n    }\r\n    return (\r\n      <form onSubmit={this.handleSubmit}>\r\n        <label>\r\n          Todo:\r\n          <input\r\n            type=\"text\"\r\n            name=\"title\"\r\n            value={this.state.title}\r\n            onChange={this.handleChange}\r\n            required\r\n          />\r\n        </label>\r\n        <label>\r\n          Description:\r\n          <input\r\n            type=\"text\"\r\n            name=\"description\"\r\n            value={this.state.description}\r\n            onChange={this.handleChange}\r\n            required\r\n          />\r\n        </label>\r\n        <button type=\"submit\">Add Todo</button>\r\n        {error}\r\n      </form>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport Todo from \"./Todo.js\";\r\nimport TodoForm from \"./TodoForm.js\";\r\n\r\nexport default class TodoList extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    // initial todo list\r\n    this.state = {\r\n      todos: [\r\n        {\r\n          id: 0,\r\n          title: \"Build a vanilla JS App\",\r\n          description: \"Gotta practice the basics.\",\r\n        },\r\n        {\r\n          id: 1,\r\n          title: \"Build a React App\",\r\n          description: \"Practice makes perfect!.\",\r\n        },\r\n        {\r\n          id: 2,\r\n          title: \"Study more\",\r\n          description: \"I have to improve!.\",\r\n        },\r\n      ],\r\n      nextId: 3,\r\n    };\r\n\r\n    // method binding\r\n    this.handleAdd = this.handleAdd.bind(this);\r\n  }\r\n\r\n  // event handler, this one is passed as a prop to each Todo component, this way, each child (Todo) has a way to tell\r\n  // their parent (TodoList) to re-render them with new props.\r\n  // It removes a Todo from the page.\r\n  handleDelete(id) {\r\n    const newTodos = this.state.todos.filter((todo) => {\r\n      return todo.id !== id;\r\n    });\r\n    this.setState({\r\n      todos: newTodos,\r\n    });\r\n  }\r\n\r\n  // Just like the above event handler, this one is passed to a child component (TodoForm).\r\n  // It receives form data from a child component and updates state based on that data.\r\n  // It adds a new todo to the page.\r\n  handleAdd(newTodo) {\r\n    const newTodos = [...this.state.todos];\r\n    newTodos.push({ id: this.state.nextId, ...newTodo });\r\n    this.setState({\r\n      todos: newTodos,\r\n      nextId: this.state.nextId + 1,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const todos = this.state.todos.map((todo) => {\r\n      return (\r\n        <Todo\r\n          key={todo.id}\r\n          title={todo.title}\r\n          description={todo.description}\r\n          handleDelete={this.handleDelete.bind(this, todo.id)} // method binding and also pass the id of each todo to be able to tell which one to delete\r\n        />\r\n      );\r\n    });\r\n    return (\r\n      <div>\r\n        <TodoForm handleAdd={this.handleAdd} />\r\n        <main>{todos}</main>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport Header from \"./Header.js\";\r\nimport TodoList from \"./TodoList.js\";\r\nimport \"./App.css\";\r\n\r\nexport default class App extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <Header />\r\n        <TodoList />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App.js\";\nimport \"./normalize.css\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}